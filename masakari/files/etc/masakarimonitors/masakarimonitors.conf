{%- from "masakari/map.jinja" import masakari with context %}

[DEFAULT]

#
# From masakarimonitors.conf
#

# Explicitly specify the temporary working directory. (string value)
#tempdir = <None>

#
# Determine if monkey patching should be applied.
#
# Related options:
#
#   * ``monkey_patch_modules``: This must have values set for this option to
# have
#   any effect
#  (boolean value)
#monkey_patch = false

#
# List of modules/decorators to monkey patch.
#
# This option allows you to patch a decorator for all functions in specified
# modules.
#
# Related options:
#
#   * ``monkey_patch``: This must be set to ``True`` for this option to
#     have any effect
#  (list value)
#monkey_patch_modules =

#
# Hostname, FQDN or IP address of this host. Must be valid within AMQP key.
#
# Possible values:
#
# * String with hostname, FQDN or IP address. Default is hostname of this host.
#  (string value)
#host = example

# Full class name for the Manager for instancemonitor. (string value)
#instancemonitor_manager = masakarimonitors.instancemonitor.instance.InstancemonitorManager

# Full class name for the Manager for processmonitor. (string value)
#processmonitor_manager = masakarimonitors.processmonitor.process.ProcessmonitorManager

# Full class name for the Manager for hostmonitor. (string value)
#hostmonitor_manager = masakarimonitors.hostmonitor.host.HostmonitorManager

#
# From oslo.log
#

# If set to true, the logging level will be set to DEBUG instead of the default
# INFO level. (boolean value)
# Note: This option can be changed without restarting.
#debug = false
debug = {{masakari.monitor.get('debug', 'false')|lower}}

# DEPRECATED: If set to false, the logging level will be set to WARNING instead
# of the default INFO level. (boolean value)
# This option is deprecated for removal.
# Its value may be silently ignored in the future.
#verbose = true

# The name of a logging configuration file. This file is appended to any
# existing logging configuration files. For details about logging configuration
# files, see the Python logging module documentation. Note that when logging
# configuration files are used then all logging configuration is set in the
# configuration file and other logging configuration options are ignored (for
# example, logging_context_format_string). (string value)
# Note: This option can be changed without restarting.
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append = <None>

# Defines the format string for %%(asctime)s in log records. Default:
# %(default)s . This option is ignored if log_config_append is set. (string
# value)
#log_date_format = %Y-%m-%d %H:%M:%S

# (Optional) Name of log file to send logging output to. If no default is set,
# logging will go to stderr as defined by use_stderr. This option is ignored if
# log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file = <None>

# (Optional) The base directory used for relative log_file  paths. This option
# is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir = <None>

# Uses logging handler designed to watch file system. When log file is moved or
# removed this handler will open a new log file with specified path
# instantaneously. It makes sense only if log_file option is specified and Linux
# platform is used. This option is ignored if log_config_append is set. (boolean
# value)
#watch_log_file = false

# Use syslog for logging. Existing syslog format is DEPRECATED and will be
# changed later to honor RFC5424. This option is ignored if log_config_append is
# set. (boolean value)
#use_syslog = false

# Syslog facility to receive log lines. This option is ignored if
# log_config_append is set. (string value)
#syslog_log_facility = LOG_USER

# Log output to standard error. This option is ignored if log_config_append is
# set. (boolean value)
#use_stderr = false

# Format string to use for log messages with context. (string value)
#logging_context_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s

# Format string to use for log messages when context is undefined. (string
# value)
#logging_default_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s

# Additional data to append to log message when logging level for the message is
# DEBUG. (string value)
#logging_debug_format_suffix = %(funcName)s %(pathname)s:%(lineno)d

# Prefix each line of exception output with this format. (string value)
#logging_exception_prefix = %(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s

# Defines the format string for %(user_identity)s that is used in
# logging_context_format_string. (string value)
#logging_user_identity_format = %(user)s %(tenant)s %(domain)s %(user_domain)s %(project_domain)s

# List of package logging levels in logger=LEVEL pairs. This option is ignored
# if log_config_append is set. (list value)
#default_log_levels = amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN,urllib3.connectionpool=WARN,websocket=WARN,requests.packages.urllib3.util.retry=WARN,urllib3.util.retry=WARN,keystonemiddleware=WARN,routes.middleware=WARN,stevedore=WARN,taskflow=WARN,keystoneauth=WARN,oslo.cache=INFO,dogpile.core.dogpile=INFO

# Enables or disables publication of error events. (boolean value)
#publish_errors = false

# The format for an instance that is passed with the log message. (string value)
#instance_format = "[instance: %(uuid)s] "

# The format for an instance UUID that is passed with the log message. (string
# value)
#instance_uuid_format = "[instance: %(uuid)s] "

# Interval, number of seconds, of log rate limiting. (integer value)
#rate_limit_interval = 0

# Maximum number of logged messages per rate_limit_interval. (integer value)
#rate_limit_burst = 0

# Log level name used by rate limiting: CRITICAL, ERROR, INFO, WARNING, DEBUG or
# empty string. Logs with level greater or equal to rate_limit_except_level are
# not filtered. An empty string means that all levels are filtered. (string
# value)
#rate_limit_except_level = CRITICAL

# Enables or disables fatal status of deprecations. (boolean value)
#fatal_deprecations = false


[api]
#
# Configration options for sending notifications.

#
# From masakarimonitors.conf
#

# Region name. (string value)
#region = RegionOne
region = {{ masakari.monitor.openstack_auth.admin_region | default('RegionOne') }}

# Masakari API Version. (string value)
#api_version = v1

# Interface of endpoint. (string value)
#api_interface = public

# Authentication URL (string value)
#auth_url = <None>
auth_url = {{ masakari.monitor.openstack_auth.protocol }}://{{ masakari.monitor.openstack_auth.host }}:{{ masakari.monitor.openstack_auth.port }}/{{ masakari.monitor.openstack_auth.version | default('v3') }}

# Domain ID to scope to (string value)
#domain_id = <None>

# Domain name to scope to (string value)
#domain_name = <None>

# Project ID to scope to (string value)
# Deprecated group/name - [api]/tenant-id
#project_id = <None>

# Project name to scope to (string value)
# Deprecated group/name - [api]/tenant-name
#project_name = <None>
project_name = {{ masakari.monitor.openstack_auth.admin_tenant | default('admin') }}

# Domain ID containing project (string value)
#project_domain_id = <None>

# Domain name containing project (string value)
#project_domain_name = <None>
project_domain_name = {{ masakari.monitor.openstack_auth.admin_tenant_domain | default('default') }}

# Trust ID (string value)
#trust_id = <None>

# Optional domain ID to use with v3 and v2 parameters. It will be used for both
# the user and project domain in v3 and ignored in v2 authentication. (string
# value)
#default_domain_id = <None>

# Optional domain name to use with v3 API and v2 parameters. It will be used for
# both the user and project domain in v3 and ignored in v2 authentication.
# (string value)
#default_domain_name = <None>

# User id (string value)
#user_id = <None>

# Username (string value)
# Deprecated group/name - [api]/user-name
#username = <None>
username = {{ masakari.monitor.openstack_auth.admin_user }}

# User's domain id (string value)
#user_domain_id = <None>

# User's domain name (string value)
#user_domain_name = <None>
user_domain_name = {{ masakari.monitor.openstack_auth.admin_domain | default('default') }}

# User's password (string value)
#password = <None>
password = {{ masakari.monitor.openstack_auth.admin_password }}


[callback]

#
# From masakarimonitors.conf
#

# Number of retries when the notification processing is error. (integer value)
#retry_max = 12

# Trial interval of time of the notification processing is error(in seconds).
# (integer value)
#retry_interval = 10


[host]

#
# From masakarimonitors.conf
#

# Driver that hostmonitor uses for monitoring hosts. (string value)
#monitoring_driver = default

# Monitoring interval(in seconds) of node status. (integer value)
#monitoring_interval = 60

# Number of retries for send a notification in processmonitor. (integer value)
#api_retry_max = 12

# Trial interval of time of the notification processing is error(in seconds).
# (integer value)
#api_retry_interval = 10

#
# Do not check whether the host is completely down.
#
# Possible values:
#
# * True: Do not check whether the host is completely down.
# * False: Do check whether the host is completely down.
#
# If ipmi RA is not set in pacemaker, this value should be set True.
#  (boolean value)
#disable_ipmi_check = false

# Timeout value(in seconds) of the ipmitool command. (integer value)
#ipmi_timeout = 5

# Number of ipmitool command retries. (integer value)
#ipmi_retry_max = 3

# Retry interval(in seconds) of the ipmitool command. (integer value)
#ipmi_retry_interval = 10

# Standby time(in seconds) until activate STONITH. (integer value)
#stonith_wait = 30

# Timeout value(in seconds) of the tcpdump command when monitors the corosync
# communication. (integer value)
#tcpdump_timeout = 5

#
# The name of interface that corosync is using for mutual communication
# between hosts.
# If there are multiple interfaces, specify them in comma-separated
# like 'enp0s3,enp0s8'.
# The number of interfaces you specify must be equal to the number of
# corosync_multicast_ports values and must be in correct order with relevant
# ports in corosync_multicast_ports.
#  (string value)
#corosync_multicast_interfaces = <None>
corosync_multicast_interfaces = {{ masakari.corosync.multicast.interface }}

#
# The port numbers that corosync is using for mutual communication
# between hosts.
# If there are multiple port numbers, specify them in comma-separated
# like '5405,5406'.
# The number of port numbers you specify must be equal to the number of
# corosync_multicast_interfaces values and must be in correct order with
# relevant interfaces in corosync_multicast_interfaces.
#  (string value)
#corosync_multicast_ports = <None>
corosync_multicast_ports = {{ masakari.corosync.multicast.port }}


[masakarimonitors_privileged]

#
# From oslo_privsep.priv_context
#

# Command to invoke to start the privsep daemon if not using the "fork" method.
# If not specified, a default is generated using "sudo privsep-helper" and arguments designed to 
# recreate the current configuration. This command must accept suitable --privsep_context 
# and --privsep_sock_path arguments.'
#helper_command = <None>
helper_command = sudo /usr/local/virtualenvs/masakarimonitor/bin/privsep-helper.sh --config-file /etc/masakarimonitors/masakarimonitors.conf

[process]

#
# From masakarimonitors.conf
#

# Interval in seconds for checking a process. (integer value)
#check_interval = 5

# Number of retries when the failure of restarting a process. (integer value)
#restart_retries = 3

# Interval in seconds for restarting a process. (integer value)
#restart_interval = 5

# Number of retries for send a notification in processmonitor. (integer value)
#api_retry_max = 12

# Interval between re-sending a notification in processmonitor(in seconds).
# (integer value)
#api_retry_interval = 10

# The file path of process list. (string value)
#process_list_path = /etc/masakarimonitors/process_list.yaml
